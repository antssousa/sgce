# Generated by Django 2.2.26 on 2022-01-10 14:36

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hash', models.CharField(editable=False, max_length=255, unique=True)),
                ('fields', jsonfield.fields.JSONField()),
                ('status', models.CharField(choices=[('p', 'Pendente'), ('v', 'Válido'), ('r', 'Revogado')], default='p', max_length=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'certificado',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dni', models.CharField(max_length=11, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('name', models.CharField(max_length=128, verbose_name='nome')),
            ],
            options={
                'verbose_name': 'participante',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nome')),
                ('title', models.CharField(blank=True, max_length=255, verbose_name='título')),
                ('content', tinymce.models.HTMLField(default='\n        Exemplo: Certificamos que NOME_COMPLETO participou do evento NOME_EVENTO, realizado em DATA_EVENTO.\n        ', help_text='\n        Os campos que compõem o certificado devem ser formados por duas palavras maísculas separadas pelo\n        caractere sublinhado (underline), como no texto de exemplo:\n        Certificamos que NOME_COMPLETO participou do evento NOME_EVENTO, realizado em DATA_EVENTO\n        ', verbose_name='texto')),
                ('backside_title', models.CharField(blank=True, max_length=255, verbose_name='título do verso')),
                ('backside_content', tinymce.models.HTMLField(blank=True, verbose_name='texto do verso')),
                ('background', models.ImageField(blank=True, help_text='\n        É recomendado que imagem de fundo deverá ter 3508 pixels de largura e 2480 pixels de altura, \n        correspondendo a uma folha A4 na orientação de paisagem.\n        ', upload_to='backgrounds', verbose_name='imagem de fundo')),
                ('font', models.CharField(choices=[('arial', 'Arial'), ('times', 'Times New Roman')], default='arial', max_length=10, verbose_name='fonte')),
                ('title_top_distance', models.DecimalField(decimal_places=1, default=3, max_digits=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='distância do topo ao título')),
                ('title_section_align', models.CharField(choices=[('left', 'Alinhar seção à esquerda'), ('center', 'Seção centralizada'), ('right', 'Alinhar seção à direita')], default='center', max_length=10, verbose_name='alinhamento da seção')),
                ('title_align', models.CharField(choices=[('left', 'Alinhar texto à esquerda'), ('center', 'Texto centralizado'), ('right', 'Alinhar texto à direita'), ('justify', 'Texto justificado')], default='center', max_length=10, verbose_name='alinhamento do título')),
                ('title_color', models.CharField(choices=[('#000', 'Preto'), ('#FFF', 'Preto'), ('#CCC', 'Cinza claro'), ('#999', 'Cinza escuro')], default='#000', max_length=10, verbose_name='cor do título')),
                ('title_font_size', models.PositiveIntegerField(default=30, verbose_name='tamanho da fonte do título')),
                ('content_title_distance', models.DecimalField(decimal_places=1, default=1.0, max_digits=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='distância do título ao texto')),
                ('content_section_align', models.CharField(choices=[('left', 'Alinhar seção à esquerda'), ('center', 'Seção centralizada'), ('right', 'Alinhar seção à direita')], default='center', max_length=10, verbose_name='alinhamento da seção')),
                ('content_text_align', models.CharField(choices=[('left', 'Alinhar texto à esquerda'), ('center', 'Texto centralizado'), ('right', 'Alinhar texto à direita'), ('justify', 'Texto justificado')], default='justify', max_length=10, verbose_name='alinhmento do texto')),
                ('content_text_color', models.CharField(choices=[('#000', 'Preto'), ('#FFF', 'Preto'), ('#CCC', 'Cinza claro'), ('#999', 'Cinza escuro')], default='#000', max_length=10, verbose_name='cor do texto')),
                ('content_font_size', models.PositiveIntegerField(default=12, verbose_name='tamanho da fonte do texto')),
                ('footer_title_distance', models.DecimalField(decimal_places=1, default=0, max_digits=2, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='distância do texto ao rodapé')),
                ('footer_section_align', models.CharField(choices=[('left', 'Alinhar seção à esquerda'), ('center', 'Seção centralizada'), ('right', 'Alinhar seção à direita')], default='center', max_length=10, verbose_name='alinhamento da seção')),
                ('footer_text_align', models.CharField(choices=[('left', 'Alinhar texto à esquerda'), ('center', 'Texto centralizado'), ('right', 'Alinhar texto à direita'), ('justify', 'Texto justificado')], default='center', max_length=10, verbose_name='alinhamento do rodapé')),
                ('footer_text_color', models.CharField(choices=[('#000', 'Preto'), ('#FFF', 'Preto'), ('#CCC', 'Cinza claro'), ('#999', 'Cinza escuro')], default='#000', max_length=10, verbose_name='cor do rodapé')),
                ('has_qrcode', models.BooleanField(default=True, verbose_name='tem qrcode?')),
                ('is_public', models.BooleanField(default=False, verbose_name='É público?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='templates', to='core.Event', verbose_name='evento')),
            ],
            options={
                'verbose_name': 'modelo',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CertificateHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, verbose_name='observação')),
                ('ip', models.GenericIPAddressField(protocol='IPv4')),
                ('status', models.CharField(choices=[('p', 'Pendente'), ('v', 'Válido'), ('r', 'Revogado')], max_length=1)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('certificate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='certificates.Certificate', verbose_name='certificado')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='usuário')),
            ],
            options={
                'verbose_name': 'histórico',
                'ordering': ['-datetime'],
            },
        ),
        migrations.AddField(
            model_name='certificate',
            name='participant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='certificates', to='certificates.Participant', verbose_name='participante'),
        ),
        migrations.AddField(
            model_name='certificate',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='certificates', to='certificates.Template', verbose_name='modelo'),
        ),
        migrations.AlterUniqueTogether(
            name='certificate',
            unique_together={('participant', 'template', 'fields')},
        ),
    ]
